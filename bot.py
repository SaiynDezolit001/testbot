import logging
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.client.default import DefaultBotProperties
from config import TOKEN, CHANNELS, ADMINS
from db import get_film_title, add_film, is_code_taken, load_films, delete_film
from stats import record_visit, get_stats
import asyncio
import datetime
import signal
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# –§–ª–∞–≥ –¥–ª—è graceful shutdown
is_shutting_down = False

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤
def signal_handler(signum, frame):
    global is_shutting_down
    if not is_shutting_down:
        is_shutting_down = True
        logging.info("Received shutdown signal. Starting graceful shutdown...")
        asyncio.create_task(shutdown())

async def shutdown():
    global is_shutting_down
    if is_shutting_down:
        return
    
    is_shutting_down = True
    logging.info("Starting shutdown process...")
    
    try:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä
        await dp.stop_polling()
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –±–æ—Ç–∞
        await bot.session.close()
        
        logging.info("Bot shutdown complete")
    except Exception as e:
        logging.error(f"Error during shutdown: {e}")
    finally:
        sys.exit(0)

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
signal.signal(signal.SIGINT, signal_handler)
signal.signal(signal.SIGTERM, signal_handler)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
messages_to_delete = {}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞
adding_films = {}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É"
submitted_requests = set()

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
async def delete_messages(chat_id):
    if chat_id in messages_to_delete:
        for msg_id in messages_to_delete[chat_id]:
            try:
                await bot.delete_message(chat_id=chat_id, message_id=msg_id)
            except Exception as e:
                logging.error(f"Error deleting message {msg_id}: {e}")
        messages_to_delete[chat_id] = []

# –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∏
async def auto_cleanup():
    while True:
        try:
            for chat_id in list(messages_to_delete.keys()):
                await delete_messages(chat_id)
            await asyncio.sleep(60 * 60)  # 1 —á–∞—Å –≤–º–µ—Å—Ç–æ 3 —á–∞—Å–æ–≤
        except Exception as e:
            logging.error(f"Error in auto_cleanup: {e}")
            await asyncio.sleep(60)  # –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø–æ–¥–æ–∂–¥–µ–º –º–∏–Ω—É—Ç—É –∏ –ø–æ–≤—Ç–æ—Ä–∏–º

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
def get_admin_keyboard():
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üé¨ –£–∑–Ω–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞", callback_data="get_film")],
        [InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤", callback_data="list_films")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="back_to_main")]
    ])
    return keyboard

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
def get_start_keyboard(user_id):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üé¨ –£–∑–Ω–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞", callback_data="get_film")],
        [InlineKeyboardButton(text="‚ÑπÔ∏è –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è", callback_data="help")],
        [InlineKeyboardButton(text="üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª—ã", callback_data="subscribe")]
    ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    if user_id in ADMINS:
        keyboard.inline_keyboard.append([InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º", callback_data="add_film")])
        keyboard.inline_keyboard.append([InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤", callback_data="list_films")])
        keyboard.inline_keyboard.append([InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å —Ñ–∏–ª—å–º", callback_data="delete_film")])
        keyboard.inline_keyboard.append([InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")])
    
    return keyboard

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤
def get_channels_keyboard():
    channel_buttons = []
    
    # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    channel_names = ["–í–∫—É—Å –ñ–∏–∑–Ω–∏", "–°–µ–∫—Ä–µ—Ç—ã –ó–¥–æ—Ä–æ–≤—å—è", "–¢–æ–Ω–∫–æ—Å—Ç–∏ –ñ–µ–Ω—Å–∫–æ–≥–æ –†–∞–∑—É–º–∞"]
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    for i in range(len(CHANNELS)):
        name = channel_names[i] if i < len(channel_names) else f"–ö–∞–Ω–∞–ª {i+1}"
        channel_buttons.append([
            InlineKeyboardButton(text=f"üéØ {name}", url=CHANNELS[i])
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞
    channel_buttons.append([
        InlineKeyboardButton(text="‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_subscription")
    ])
    channel_buttons.append([
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=channel_buttons)

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@dp.message(Command('start'))
async def send_welcome(message: Message):
    try:
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ—Å–µ—â–µ–Ω–∏–µ
        record_visit(message.from_user.id)
        
        welcome_text = (
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏–π —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∫–æ–¥—É.\n\n"
            "üéØ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —á–∏—Å–ª–æ–≤–æ–π –∫–æ–¥ —Ñ–∏–ª—å–º–∞, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ.\n"
            "üìù –ù–µ –∑–∞–±—É–¥—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
        )
        sent_message = await message.answer(welcome_text, reply_markup=get_start_keyboard(message.from_user.id))
        
        if message.chat.id not in messages_to_delete:
            messages_to_delete[message.chat.id] = []
        messages_to_delete[message.chat.id].extend([message.message_id, sent_message.message_id])
    except Exception as e:
        logging.error(f"Error in send_welcome: {e}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
@dp.callback_query()
async def process_callback(callback: types.CallbackQuery):
    try:
        if callback.data == "get_film":
            sent_message = await callback.message.answer(
                "üîç –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —á–∏—Å–ª–æ–≤–æ–π –∫–æ–¥ —Ñ–∏–ª—å–º–∞, –∏ —è –Ω–∞–π–¥—É –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ.",
                reply_markup=get_start_keyboard(callback.from_user.id)
            )
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            if callback.message.chat.id not in messages_to_delete:
                messages_to_delete[callback.message.chat.id] = []
            messages_to_delete[callback.message.chat.id].append(sent_message.message_id)
        elif callback.data == "help":
            help_text = (
                "üìñ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:\n\n"
                "1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —á–∏—Å–ª–æ–≤–æ–π –∫–æ–¥ —Ñ–∏–ª—å–º–∞\n"
                "2Ô∏è‚É£ –ù–∞–∂–º–∏ –Ω–∞ –∫–∞–∂–¥—ã–π –∫–∞–Ω–∞–ª –∏ –ø–æ–¥–∞–π –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ\n"
                "3Ô∏è‚É£ –ü–æ—Å–ª–µ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É '–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è'\n"
                "4Ô∏è‚É£ –ü–æ–ª—É—á–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞\n\n"
                "‚ùì –ï—Å–ª–∏ –∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞"
            )
            sent_message = await callback.message.answer(help_text, reply_markup=get_start_keyboard(callback.from_user.id))
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            if callback.message.chat.id not in messages_to_delete:
                messages_to_delete[callback.message.chat.id] = []
            messages_to_delete[callback.message.chat.id].append(sent_message.message_id)
        elif callback.data == "subscribe":
            subscribe_text = (
                "üì¢ –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∏–ª—å–º–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n\n"
                "1Ô∏è‚É£ –ù–∞–∂–º–∏ –Ω–∞ –∫–∞–∂–¥—ã–π –∫–∞–Ω–∞–ª –∏ –ø–æ–¥–∞–π –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ\n"
                "2Ô∏è‚É£ –ü–æ—Å–ª–µ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É '–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è'\n"
                "3Ô∏è‚É£ –ü–æ–ª—É—á–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –ø–æ –∫–æ–¥—É"
            )
            sent_message = await callback.message.answer(subscribe_text, reply_markup=get_channels_keyboard())
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            if callback.message.chat.id not in messages_to_delete:
                messages_to_delete[callback.message.chat.id] = []
            messages_to_delete[callback.message.chat.id].append(sent_message.message_id)
        elif callback.data == "check_subscription":
            user_id = callback.from_user.id
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö, –∫—Ç–æ –Ω–∞–∂–∞–ª "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"
            submitted_requests.add(user_id)
            
            sent_message = await callback.message.answer(
                "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∏—Å–ª–æ–≤–æ–π –∫–æ–¥.",
                reply_markup=get_start_keyboard(callback.from_user.id)
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            if callback.message.chat.id not in messages_to_delete:
                messages_to_delete[callback.message.chat.id] = []
            messages_to_delete[callback.message.chat.id].append(sent_message.message_id)
        elif callback.data == "back_to_main":
            # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ
            if callback.from_user.id in adding_films:
                del adding_films[callback.from_user.id]
                
            welcome_text = (
                "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏–π —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∫–æ–¥—É.\n\n"
                "üéØ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —á–∏—Å–ª–æ–≤–æ–π –∫–æ–¥ —Ñ–∏–ª—å–º–∞, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ.\n"
                "üìù –ù–µ –∑–∞–±—É–¥—å –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫–∏ –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
            )
            sent_message = await callback.message.answer(welcome_text, reply_markup=get_start_keyboard(callback.from_user.id))
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            if callback.message.chat.id not in messages_to_delete:
                messages_to_delete[callback.message.chat.id] = []
            messages_to_delete[callback.message.chat.id].append(sent_message.message_id)
        elif callback.data == "add_film":
            if callback.from_user.id not in ADMINS:
                await callback.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–æ–≤", show_alert=True)
                return
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞
            adding_films[callback.from_user.id] = {"step": "code"}
            
            sent_message = await callback.message.answer(
                "‚ûï –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —Ñ–∏–ª—å–º–∞ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã):",
                reply_markup=get_admin_keyboard()
            )
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            if callback.message.chat.id not in messages_to_delete:
                messages_to_delete[callback.message.chat.id] = []
            messages_to_delete[callback.message.chat.id].append(sent_message.message_id)
        elif callback.data == "list_films":
            if callback.from_user.id not in ADMINS:
                await callback.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤", show_alert=True)
                return
            
            films = load_films().get("films", {})
            if not films:
                sent_message = await callback.message.answer(
                    "üìã –°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –ø—É—Å—Ç.",
                    reply_markup=get_start_keyboard(callback.from_user.id)
                )
            else:
                films_list = "üìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∏–ª—å–º–æ–≤:\n\n"
                for code, title in sorted(films.items(), key=lambda x: int(x[0])):
                    films_list += f"üé¨ –ö–æ–¥: {code}\n–ù–∞–∑–≤–∞–Ω–∏–µ: {title}\n\n"
                
                sent_message = await callback.message.answer(
                    films_list,
                    reply_markup=get_start_keyboard(callback.from_user.id)
                )
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            if callback.message.chat.id not in messages_to_delete:
                messages_to_delete[callback.message.chat.id] = []
            messages_to_delete[callback.message.chat.id].append(sent_message.message_id)
        elif callback.data == "delete_film":
            if callback.from_user.id not in ADMINS:
                await callback.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–æ–≤", show_alert=True)
                return
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–æ—Ü–µ—Å—Å —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞
            adding_films[callback.from_user.id] = {"step": "delete_code"}
            
            sent_message = await callback.message.answer(
                "üóë –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —Ñ–∏–ª—å–º–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:",
                reply_markup=get_admin_keyboard()
            )
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            if callback.message.chat.id not in messages_to_delete:
                messages_to_delete[callback.message.chat.id] = []
            messages_to_delete[callback.message.chat.id].append(sent_message.message_id)
        elif callback.data == "stats":
            if callback.from_user.id not in ADMINS:
                await callback.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", show_alert=True)
                return
            
            try:
                # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã
                stats_1h = get_stats(1)
                stats_24h = get_stats(24)
                stats_7d = get_stats(24 * 7)
                
                stats_text = (
                    "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:\n\n"
                    f"–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å:\n"
                    f"üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats_1h.get('unique_users', 0)}\n"
                    f"üîÑ –í—Å–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏–π: {stats_1h.get('total_visits', 0)}\n\n"
                    f"–ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞:\n"
                    f"üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats_24h.get('unique_users', 0)}\n"
                    f"üîÑ –í—Å–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏–π: {stats_24h.get('total_visits', 0)}\n\n"
                    f"–ó–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é:\n"
                    f"üë• –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats_7d.get('unique_users', 0)}\n"
                    f"üîÑ –í—Å–µ–≥–æ –ø–æ—Å–µ—â–µ–Ω–∏–π: {stats_7d.get('total_visits', 0)}"
                )
                
                sent_message = await callback.message.answer(
                    stats_text,
                    reply_markup=get_start_keyboard(callback.from_user.id)
                )
                
                if callback.message.chat.id not in messages_to_delete:
                    messages_to_delete[callback.message.chat.id] = []
                messages_to_delete[callback.message.chat.id].append(sent_message.message_id)
            except Exception as e:
                logging.error(f"Error getting stats: {e}")
                await callback.message.answer(
                    "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏",
                    reply_markup=get_start_keyboard(callback.from_user.id)
                )
        
        # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
        await callback.answer()
    except Exception as e:
        logging.error(f"Error in process_callback: {e}")
        try:
            await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        except:
            pass

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def process_message(message: Message):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞
        if message.from_user.id in adding_films:
            if adding_films[message.from_user.id]["step"] == "code":
                if not message.text.isdigit():
                    sent_message = await message.reply(
                        "‚ùå –ö–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:",
                        reply_markup=get_admin_keyboard()
                    )
                else:
                    code = int(message.text)
                    if is_code_taken(code):
                        sent_message = await message.reply(
                            "‚ùå –≠—Ç–æ—Ç –∫–æ–¥ —É–∂–µ –∑–∞–Ω—è—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –∫–æ–¥:",
                            reply_markup=get_admin_keyboard()
                        )
                    else:
                        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–¥ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
                        adding_films[message.from_user.id] = {
                            "step": "title",
                            "code": code
                        }
                        sent_message = await message.reply(
                            "üìù –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞:",
                            reply_markup=get_admin_keyboard()
                        )
            elif adding_films[message.from_user.id]["step"] == "title":
                # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –∫–æ–¥
                code = adding_films[message.from_user.id]["code"]
                title = message.text.strip()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –Ω–∞–∑–≤–∞–Ω–∏—è
                if len(title) < 2:
                    sent_message = await message.reply(
                        "‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ. –í–≤–µ–¥–∏—Ç–µ –±–æ–ª–µ–µ –¥–ª–∏–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:",
                        reply_markup=get_admin_keyboard()
                    )
                else:
                    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å–º
                    add_film(code, title)
                    
                    # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
                    del adding_films[message.from_user.id]
                    
                    sent_message = await message.reply(
                        f"‚úÖ –§–∏–ª—å–º —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n\n"
                        f"–ö–û–î: {code}\n"
                        f"–ù–∞–∑–≤–∞–Ω–∏–µ –§–∏–ª—å–º–∞: {title}",
                        reply_markup=get_start_keyboard(message.from_user.id)
                    )
            elif adding_films[message.from_user.id]["step"] == "delete_code":
                if not message.text.isdigit():
                    sent_message = await message.reply(
                        "‚ùå –ö–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:",
                        reply_markup=get_admin_keyboard()
                    )
                else:
                    code = int(message.text)
                    if not is_code_taken(code):
                        sent_message = await message.reply(
                            "‚ùå –§–∏–ª—å–º —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∫–æ–¥:",
                            reply_markup=get_admin_keyboard()
                        )
                    else:
                        # –£–¥–∞–ª—è–µ–º —Ñ–∏–ª—å–º
                        film_title = get_film_title(code)
                        delete_film(code)
                        
                        # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–∞ —É–¥–∞–ª–µ–Ω–∏—è
                        del adding_films[message.from_user.id]
                        
                        sent_message = await message.reply(
                            f"‚úÖ –§–∏–ª—å–º —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!\n\n"
                            f"–ö–û–î: {code}\n"
                            f"–ù–∞–∑–≤–∞–Ω–∏–µ –§–∏–ª—å–º–∞: {film_title}",
                            reply_markup=get_start_keyboard(message.from_user.id)
                        )
        else:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            if message.text and message.text.isdigit():
                user_id = message.from_user.id
                
                if user_id not in submitted_requests:
                    subscribe_text = (
                        "üì¢ –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∏–ª—å–º–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n\n"
                        "1Ô∏è‚É£ –ù–∞–∂–º–∏ –Ω–∞ –∫–∞–∂–¥—ã–π –∫–∞–Ω–∞–ª –∏ –ø–æ–¥–∞–π –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ\n"
                        "2Ô∏è‚É£ –ü–æ—Å–ª–µ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É '–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è'\n"
                        "3Ô∏è‚É£ –ü–æ–ª—É—á–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –ø–æ –∫–æ–¥—É"
                    )
                    sent_message = await message.reply(subscribe_text, reply_markup=get_channels_keyboard())
                    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
                    if message.chat.id not in messages_to_delete:
                        messages_to_delete[message.chat.id] = []
                    messages_to_delete[message.chat.id].extend([message.message_id, sent_message.message_id])
                    return

                film_title = get_film_title(int(message.text))

                if film_title:
                    sent_message = await message.reply(
                        f"üé¨ –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞: <b>{film_title}</b>",
                        reply_markup=get_start_keyboard(message.from_user.id)
                    )
                else:
                    sent_message = await message.reply(
                        "‚ùå –§–∏–ª—å–º —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–æ–¥–∞.",
                        reply_markup=get_start_keyboard(message.from_user.id)
                    )
            else:
                # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —á–∏—Å–ª–æ–≤–æ–π –∫–æ–¥, –Ω–∞–ø–æ–º–∏–Ω–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Ñ–æ—Ä–º–∞—Ç–µ
                sent_message = await message.reply(
                    "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π –∫–æ–¥ —Ñ–∏–ª—å–º–∞.",
                    reply_markup=get_start_keyboard(message.from_user.id)
                )
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        if message.chat.id not in messages_to_delete:
            messages_to_delete[message.chat.id] = []
        messages_to_delete[message.chat.id].extend([message.message_id, sent_message.message_id])
    except Exception as e:
        logging.error(f"Error in process_message: {e}")
        try:
            await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", 
                               reply_markup=get_start_keyboard(message.from_user.id))
        except:
            pass

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∑–∞–¥–∞—á–µ
        asyncio.create_task(auto_cleanup())
        
        logging.info("Starting bot...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        await dp.start_polling(bot)
    except Exception as e:
        logging.error(f"Error in main: {e}")
        await shutdown()

if __name__ == '__main__':
    asyncio.run(main())